@php
  manifest([

  ]);
@endphp
"ServerAdvertisements3"
{
  "Settings"
  {
    "ServerName" "{{ variable('sa3_servername', $sa3_servername ?? null, '[{orange}SERVER{default}]') }}" // Server tag
    "MySQL" "{{ variable('sa3_mysql', $sa3_mysql ?? null, '0') }}" // If 1 -> Messages will be loaded from MySQL
    "ServerType" "{{ variable('sa3_server_type', $sa3_server_type ?? null, 'default') }}" // Only if MySQL is 1 -> Simply divide messages to groups (e.g. 3 servers uses ServerType surf and 2 servers uses jailbreak)
    "Time" "{{ variable('sa3_time', $sa3_time ?? null, '5') }}" // Time in seconds
    "Languages" "{{ variable('sa3_languages', $sa3_languages ?? null, 'EN;CZ') }}" // List of languages / Keep the main language first (If player connect from Country you did not translated. He will get messages in language which is the first in list).
    "Default language" "{{ variable('sa3_default_language', $sa3_default_language ?? null, 'geoip') }}" // Value = "geoip" or "ingame"
    "Log expired messages" "{{ variable('sa3_log_expired_messages', $sa3_log_expired_messages ?? null, '0') }}" // 1 = Enabled -> Messages are loged in Sourcemod's error log
  }
  "Welcome Message"
  {
    "Enabled" "{{ variable('sa3_welcome_enabled', $sa3_welcome_enabled ?? null, '1') }}" // 1 = Enabled / 0 = Disabled,
    "Type" "{{ variable('sa3_welcome_type', $sa3_welcome_type ?? null, 'T') }}" // Type of message - Only T type supported right now
    "en" "{{ variable('sa3_welcome_message_en', $sa3_welcome_message_en ?? null, 'true') }}"
    "cz" "{{ variable('sa3_welcome_message_cz', $sa3_welcome_message_cz ?? null, 'true') }}"
    "Delay" "{{ variable('sa3_welcome_delay', $sa3_welcome_delay ?? null, '5.0') }}" // Time in seconds after is client connected to server to show message
    "flags" "{{ variable('sa3_welcome_flags', $sa3_welcome_flags ?? null, '') }}" // Client with this flag will get welcome message - Keep empty for all
  }
  "Messages"
  {
    @foreach($messages as $id=>$m)
      "{{ $m['key'] }} "
      {
        @foreach(json_decode($m['value']) as $k=>$v)
          @if($v)
            "{{ $k }}" "{{ $v }}"
          @endif
        @endforeach
      }
    @endforeach
  }
}
